#!/bin/bash




git config --global color.ui auto
git status
git commit -m "hello.sh created"
git status
git add .
git checkout
git init
git add README.md
git commit -m "first commit"
git branch -M main
git push -u origin main









(base) [train@10 git_project]$ nano hello.sh

(base) [train@10 git_project]$ .hello.sh

(base) [train@10 git_project]$ ./hello.sh
Hello from git

(base) [train@10 git_project]$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       hello.sh
nothing added to commit but untracked files present (use "git add" to track)
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git config --global color.ui auto
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       hello.sh
nothing added to commit but untracked files present (use "git add" to track)
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git commit -m "hello.sh created"
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       hello.sh
nothing added to commit but untracked files present (use "git add" to track)
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       hello.sh
nothing added to commit but untracked files present (use "git add" to track)
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git ccheckout --hello.sh
git: 'ccheckout' is not a git command. See 'git --help'.

Did you mean this?
        checkout
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git checkout --hello.sh
error: unknown option `hello.sh'
usage: git checkout [options] <branch>
   or: git checkout [options] [<branch>] -- <file>...

    -q, --quiet           suppress progress reporting
    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --detach              detach the HEAD at named commit
    -t, --track           set upstream info for new branch
    --orphan <new branch>
                          new unparented branch
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -f, --force           force checkout (throw away local modifications)
    -m, --merge           perform a 3-way merge with the new branch
    --overwrite-ignore    update ignored files (default)
    --conflict <style>    conflict style (merge or diff3)
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only

(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git add .
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#       new file:   hello.sh
#
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git checkout 
fatal: You are on a branch yet to be born
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ echo "# mlfci" >> README.md
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git init
Reinitialized existing Git repository in /home/train/git_project/.git/
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git add README.md
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git commit -m "first commit"
[master (root-commit) 1c3cc03] first commit
 2 files changed, 4 insertions(+)
 create mode 100644 README.md
 create mode 100755 hello.sh
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git branch -M main
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ 
(base) [train@10 git_project]$ git remote add origin https://github.com/mlfci/mlfci.git
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$
(base) [train@10 git_project]$ git push -u origin main
Username for 'https://github.com': mlfci
Password for 'https://mlfci@github.com': 
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 296 bytes | 0 bytes/s, done.
Total 4 (delta 0), reused 0 (delta 0)
remote: To https://github.com/mlfci/mlfci.git
 * [new branch]      main -> main
Branch main set up to track remote branch main from origin.
(base) [train@10 git_project]$
